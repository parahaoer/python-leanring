使用zip()函数来可以把列表合并，并返回一个元组对的列表。
栗子：
a = [1,2,3]
b = [4,5,6]
c = zip(a,b)
print(c)
#在python 3中zip()返回一个可迭代对象，使用时将其包含在一个list中，方便一次性显示出所有结果
print(list(c))
结果：
<zip object at 0x7f784cc0b988>
[(1, 4), (2, 5), (3, 6)]

zip()参数可以接受任何类型的序列，同时也可以有两个以上的参数;当传入参数的长度不同时，zip能自动以最短序列长度为准进行截取，获得元组。
栗子1：
l1,l2,l3 = (1,2,3),(4,5,6),(7,8,9)
l = list(zip(l1,l2,l3))
print(l)
结果：
[(1, 4, 7), (2, 5, 8), (3, 6, 9)]
栗子2：
str1 = 'abc'
str2 = 'def123'
s = list(zip(str1,str2))
print(s)
结果：
[('a', 'd'), ('b', 'e'), ('c', 'f')]

遍历zip：
l1 = [2,3,4]
l2 = [4,5,6]
 
for x,y in zip(l1,l2):
    print(x,y)
结果：
2 4
3 5
4 6
其实它的工作原理就是使用了zip()的结果，在for循环里解包zip结果中的元组，用元组赋值运算。就好像(x,y)=(2.4)，
